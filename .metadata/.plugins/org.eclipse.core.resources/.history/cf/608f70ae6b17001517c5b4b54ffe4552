package ba.bitcamp.homework_stringbuilder.task3;

public class Date {
	private static final int DEFAULT_MONTH_AND_YEAR = 1;
	private int day;
	private int month;
	private int year;

	/**
	 * @param day
	 * @param month
	 * @param year
	 */
	public Date(int day, int month, int year) {
		super();
		this.day = day;
		this.month = month;
		this.year = year;
		
		if (!validateDate()) {
			System.out.println("Invalid date!");
		}
	}

	/**
	 * @param day
	 * @param month
	 */
	public Date(int day, int month) {
		this(day, month, DEFAULT_MONTH_AND_YEAR);
	}

	/**
	 * @param day
	 */
	public Date(int day) {
		this(day, DEFAULT_MONTH_AND_YEAR, DEFAULT_MONTH_AND_YEAR);
	}

	private boolean validateDate(int day, int month, int year) {
		boolean validDate = false;
		if ((month >= 1 && month <= 12) && (day >= 1 && day <= 31)) {
			// For months with 30 days
			validDate = ((month == 4 || month == 6 || month == 9 || month == 11) && (day <= 30)) ? true
					: false;

			// For months with 31 days
			validDate = ((month == 1 || month == 2 || month == 3 || month == 5
					|| month == 7 || month == 8 || month == 10 || month == 12) && (day <= 31)) ? true
					: false;

			// For February
			if ((month == 2) && (day < 30)) {
				// Boolean for valid leap year
				boolean validLeapYear = false;

				// A leap year is any year that is divisible by 4 but not
				// divisible by 100 unless it is also divisible by 400
				validLeapYear = ((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0))) ? true
						: false;

				validDate = (validLeapYear == true && day <= 29) ? true : false;

				validDate = (validLeapYear == false && day <= 28) ? true
						: false;
			}
		}
		return validDate;
	}
	
	public void setDate(int day) {
		if (validateDate()) {
			this.day = day;
		}
	}

}
