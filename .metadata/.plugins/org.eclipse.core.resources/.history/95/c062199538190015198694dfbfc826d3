package ba.bitcamp.homework_weekend5.task3;

import javax.naming.OperationNotSupportedException;

import ba.bitcamp.homework_weekend5.task1.Character;
import ba.bitcamp.homework_weekend5.task2.Goal;

public class Protagonist extends Character {
	
	private static final int MAX_ALLIES = 3;
	private Goal goal;
	private Character[] allies;
	private Character enemy;
	
	/**
	 * @param name
	 * @param sex
	 * @param isCapable
	 * @param goal
	 */
	public Protagonist(String name, boolean sex, boolean isCapable, Goal goal) {
		super(name, sex, isCapable);
		this.goal = goal;
		this.enemy = null;
	}

	/**
	 * @return the goal
	 */
	public Goal getGoal() {
		return goal;
	}

	/**
	 * @param goal the goal to set
	 */
	public void setGoal(Goal goal) {
		this.goal = goal;
	}

	/**
	 * @return the allies
	 */
	public Character[] getAllies() {
		return allies;
	}

	/**
	 * @return the enemy
	 */
	public Character getEnemy() {
		return enemy;
	}

	/**
	 * @param enemy the enemy to set
	 */
	public void setEnemy(Character enemy) {
		this.enemy = enemy;
	}

	/**
	 * @param allies[] allies to set
	 */
	public void setAllies(Character[] allies) {
		if(allies.length < MAX_ALLIES){
			this.allies = allies;
		} else {
			
			throw new ArrayIndexOutOfBoundsException("No more allies allowed!");
		}
	}
	
	public void addAlly(Character ally) {		

		int alliesNo = allies.length;
		if(alliesNo == MAX_ALLIES) {
			throw new ArrayIndexOutOfBoundsException("No more allies allowed!");
		} else {
			Character[] newAllies = new Character[alliesNo + 1];
			for (int i = 0; i < newAllies.length; i++) {
				
			}
		}
		Character[] tmp = new Character[++Protagonist.counter];
		for (int i = 0; i < characters.length; i++) {
			tmp[i] = characters[i];
		}
		tmp[tmp.length - 1] = character;
		this.characters = tmp;
	}
	
	
}
